/* === Modern Variables === */
:root {
    --text: #f0f0f0;
    --background: #0a0a12;
    --primary: #c04afd;
    --secondary: #7d3dff;
    --accent: #ff2df7;
    --card-bg: rgba(25, 20, 40, 0.65);
    --success: #00ff88;
    --warning: #ffcc00;
    --danger: #ff3860;
    --border-radius: clamp(12px, 2vw, 16px);
    --spacing: clamp(1rem, 2vw, 1.5rem);
    --neon-glow: 0 0 10px var(--primary), 
                 0 0 20px rgba(192, 74, 253, 0.3);
    --max-content-width: min(900px, 90vw);
}

/* === Modern Font Stack === */
@font-face {
    font-family: 'MinecraftModern';
    src: url('../fonts/font1.ttf') format('truetype');
    font-display: swap;
}

@import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500&family=Rajdhani:wght@500;600&display=swap');

/* === Glass Base === */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

html {
    scroll-behavior: smooth;
    background:
        radial-gradient(circle at 20% 30%, rgba(122, 74, 218, 0.15) 0%, transparent 40%),
        linear-gradient(to bottom, #0a0618, #160b2b);
    min-height: 100%;
}

body {
    font-family: 'Rajdhani', 'MinecraftModern', sans-serif;
    color: var(--text);
    min-height: 100vh;
    display: grid;
    place-items: center;
    padding: var(--spacing);
    line-height: 1.6;
    overflow-x: hidden;
}

/* === Holographic UI Container === */
.glass-container {
    width: 100%;
    max-width: var(--max-content-width);
    min-width: 0;
    background: var(--card-bg);
    backdrop-filter: blur(12px) saturate(200%);
    -webkit-backdrop-filter: blur(12px) saturate(200%);
    border-radius: var(--border-radius);
    border: 1px solid rgba(192, 74, 253, 0.2);
    box-shadow: 
        0 10px 45px rgba(122, 74, 218, 0.25),
        inset 0 0 20px rgba(255, 255, 255, 0.05);
    overflow: hidden;
    position: relative;
    z-index: 1;
    animation: hologramAppear 0.8s cubic-bezier(0.22, 1, 0.36, 1);
}

@keyframes hologramAppear {
    0% { opacity: 0; transform: translateY(30px) scale(0.95); }
    100% { opacity: 1; transform: translateY(0) scale(1); }
}

/* === Header === */
.app-header {
    padding: var(--spacing);
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    color: white;
    text-align: center;
    position: relative;
    overflow: hidden;
    font-family: 'Orbitron', 'MinecraftModern', sans-serif;
}

.app-header h1 {
    font-size: clamp(1.6rem, 4vw, 2rem);
    font-weight: 600;
    letter-spacing: 1.5px;
    text-transform: uppercase;
    position: relative;
    z-index: 2;
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.4);
    word-break: break-word;
}

.app-header::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(
        to bottom right,
        transparent 45%,
        rgba(255, 255, 255, 0.1) 50%,
        transparent 55%
    );
    animation: shine 6s infinite linear;
    z-index: 1;
}

@keyframes shine {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* === Card === */
.player-card {
    background: var(--card-bg);
    border-radius: var(--border-radius);
    padding: var(--spacing);
    margin: var(--spacing);
    border: 1px solid rgba(192, 74, 253, 0.3);
    box-shadow: var(--neon-glow);
    transition: all 0.4s ease;
    position: relative;
    overflow: hidden;
}

.player-card:hover {
    transform: translateY(-5px);
    box-shadow: 
        0 0 15px var(--primary),
        0 5px 25px rgba(122, 74, 218, 0.4);
}

.card-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
    padding-bottom: 0.75rem;
    border-bottom: 1px solid rgba(192, 74, 253, 0.3);
    gap: 1rem;
    flex-wrap: wrap;
}

.card-header h2 {
    color: var(--primary);
    font-size: clamp(1.2rem, 3vw, 1.5rem);
    font-weight: 600;
    letter-spacing: 1px;
    font-family: 'Orbitron', sans-serif;
    min-width: 0;
}

/* === Status Indicator === */
.status-indicator {
    width: 14px;
    height: 14px;
    min-width: 14px;
    min-height: 14px;
    border-radius: 50%;
    background: var(--danger);
    box-shadow: 0 0 10px var(--danger);
    position: relative;
    opacity: 1;
    transition: 
        background 0.3s ease,
        box-shadow 0.3s ease;
    flex-shrink: 0;
}

.status-indicator.connected {
    background: var(--success);
    box-shadow: 0 0 10px var(--success);
    animation: pulse 1.5s infinite;
}

@keyframes pulse {
    0% { opacity: 0.8; transform: scale(1); }
    50% { opacity: 1; transform: scale(1.1); }
    100% { opacity: 0.8; transform: scale(1); }
}

/* === Loading Spinner === */
.loading-spinner {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 8px;
    height: 100px;
}

.spinner-sector {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    animation: spinner-pulse 1.5s infinite ease-in-out;
}

.spinner-red {
    background: var(--danger);
    animation-delay: 0s;
}

.spinner-blue {
    background: var(--secondary);
    animation-delay: 0.2s;
}

.spinner-purple {
    background: var(--primary);
    animation-delay: 0.4s;
}

@keyframes spinner-pulse {
    0%, 100% { transform: scale(0.8); opacity: 0.5; }
    50% { transform: scale(1.2); opacity: 1; }
}

/* === Error Message === */
.error-message {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    padding: 1.5rem;
    color: var(--danger);
    font-weight: 500;
}

.error-message svg {
    flex-shrink: 0;
}

/* === Stats Grid === */
.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(200px, 100%), 1fr));
    gap: 1.25rem;
}

.stat-item {
    background: rgba(15, 10, 30, 0.4);
    padding: 1rem;
    border-radius: 10px;
    border-left: 3px solid var(--primary);
    transition: all 0.3s ease;
    min-width: 0;
}

.stat-item:hover {
    background: rgba(25, 20, 40, 0.6);
    transform: translateX(5px);
}

.stat-label {
    color: var(--primary);
    font-size: clamp(0.8rem, 2vw, 0.9rem);
    font-weight: 500;
    letter-spacing: 0.5px;
    margin-bottom: 0.5rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

.stat-label::before {
    content: 'â—ˆ';
    color: var(--accent);
    font-size: 0.7rem;
}

.stat-value {
    font-size: clamp(1rem, 3vw, 1.2rem);
    font-weight: 600;
    font-family: 'Rajdhani', sans-serif;
    word-break: break-word;
}

.stat-unit {
    font-size: 0.8em;
    opacity: 0.8;
    margin-left: 2px;
}

/* === Footer === */
.app-footer {
    padding: 1.25rem var(--spacing);
    background: rgba(10, 5, 20, 0.8);
    text-align: center;
    font-size: clamp(0.8rem, 2vw, 0.9rem);
    border-top: 1px solid rgba(192, 74, 253, 0.2);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.75rem;
}

/* === Links === */
a {
    color: var(--accent);
    text-decoration: none;
    position: relative;
    font-weight: 500;
    transition: all 0.3s ease;
    word-break: break-word;
}

a:hover {
    color: white;
    text-shadow: 0 0 8px var(--accent);
}

a::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 1px;
    background: linear-gradient(90deg, var(--accent), transparent);
    transition: width 0.3s ease;
}

a:hover::after {
    width: 100%;
}

/* === Effects === */
@keyframes scanline {
    0% { top: 0; }
    100% { top: 100%; }
}

/* === Responsive === */
@media (max-width: 768px) {
    .stats-grid {
        grid-template-columns: 1fr;
    }
}

@media (max-width: 480px) {
    .player-card {
        margin: calc(var(--spacing) * 0.5);
    }
    
    .stat-item {
        padding: 0.75rem;
    }
}